function [] = TCI_NegRamp ()
%% TCI_NegRamp processes YC3.6 calcium responses to a variety of positive thermotaxis ramps
%   [] = TCI_NegRamp()
%   Traces generated by the following stimulus protocols can be analyzed by
%   this script: 
%       Non-physiological 22 to 13C temperature ramp (Neg Ramp 2)
%
%   Version 1.0
%   Version Date: 04-2-20
%
%% Revision History
%   4-2-20:    Adapted from an older version of the code by ASB


warning('off','all'); % Don't display warnings

%% Select .csv file(s) or .mat file containing imaging data
global pathstr
global preprocessed
global newdir
global plotlogic

[name, pathstr] = uigetfile({'*.csv; *.mat'},'Select imaging data',cd,'MultiSelect','on');

if isequal(name,0)
    error('User canceled analysis session');
end

if ischar(name)
    numfiles = 1;
    filename = {fullfile(pathstr, name)};
else
    numfiles = size(name,2);
    filename = fullfile(pathstr, name);
end

%% Gather Stimulus Protocol Specific Parameters
[Stim, time, Pname] = TCI_Params ();

%% Ask user if they want to generate plots
answer = questdlg('Generate plots?');
switch answer
    case 'Yes'
        plotlogic = 1;
    case 'No'
        plotlogic = 0;
    case 'Cancel'
        plotlogic = 0;
end


%% Load and Process Data
if endsWith(filename,'mat')
    % Pre-processed data in .mat format.
    load(filename{1});
    numfiles = size(CaResponse.subset,2);
    preprocessed = 1;
    n = regexp(name,'_data','split');
    n = n{1};
    newdir = fullfile(pathstr,n);
    if exist(newdir,'dir') == 0
        status = mkdir(newdir);
    end
else
    % These are .csv files. Need to pick temperature log.
    preprocessed = 0;
    [tempn, tempp] = uigetfile('*.dat', 'Select concatenated temperature readings file',pathstr);
    if isequal(tempn,0)
        error('User canceled analysis session');
    end
    tempname = fullfile(tempp, tempn);
    
    % Import Temperature Log
    opts = detectImportOptions(tempname);
    opts = setvartype(opts,{'Var1','Var2'},'datetime');
    disp('Importing temperature log...');
    fulltemp = readtable(tempname,opts);
    disp('...done');
    
    % Import calcium responses and process traces
    for i=1:numfiles
        [~, UIDs{i}, ~] = fileparts(filename{i});
        [temp.subset(:,1), temp.subset(:,2), temp.full(:,1), temp.full(:,2)]=TCI_LoadTrace(filename{i},tempname, fulltemp,Stim, time);
        sz.subset = size(temp.subset,1);
        sz.full = size(temp.full,1);
        CaResponse.subset(1:sz.subset,i) = temp.subset(:,1);
        Temps.subset(1:sz.subset,i) = temp.subset(:,2);
        CaResponse.full(1:sz.full,i) = temp.full(:,1);
        Temps.full(1:sz.full,i) = temp.full(:,2);
        clear temp
    end
    
    % Generate new folder for plots and results
    disp(filename{1}); % So I can remind myself what I'm analyzing.
    n = inputdlg({'Input new filename'},'Save As',1,{Pname});
    n = n{1};
    
    newdir = fullfile(pathstr,n);
    if exist(newdir,'dir') == 0
        status = mkdir(newdir);
    end
end
%% Save Batch Data
if numfiles >1
    save (fullfile(pathstr,strcat(n,'_data.mat')),'CaResponse', 'Temps','UIDs');
end

%% Quantifications
CaResponse.norm = CaResponse.subset./max(CaResponse.full);
[AtTh, AboveTh, Results] = TCI_Quantifications (Temps,CaResponse, Stim, time,n);

%% Plot Data
if plotlogic > 0
    TCI_Plots(Temps, CaResponse, AtTh, AboveTh,Stim, UIDs, n, numfiles);
end

%% Save Data
headers={'UIDs','AtTh_Spearmans_R','AboveTh_Pearsons_R','Tstar', 'Maximal_Temp',strcat('ResponseSize_',num2str(Stim.Analysis(1)),'C'),strcat('ResponseSize_',num2str(Stim.Analysis(2)),'C'), strcat('ResponseSize_',num2str(Stim.max),'C')};
T=table(UIDs',Results.Corr.AtTh.R',Results.Corr.AboveTh.R',Results.Thresh.temp',Results.maximalTemp', Results.ResponseBin1', Results.ResponseBin2',Results.MaxTempResponse','VariableNames',headers);
writetable(T,fullfile(newdir,strcat(n,'_results.xlsx')));

disp('Finished Analysis');
clear all; close all;
end